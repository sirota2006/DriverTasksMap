{"ast":null,"code":"import { FETCH_DRIVERS, REMOVE_DRIVER, FILTER_DRIVERS } from \"./types\";\nimport { DRIVERS_API } from \"../../shared/contants/apis\";\nimport Axios from \"axios\";\nexport function fetchDrivers() {\n  return async dispatch => {\n    const _ref = await Axios.get(DRIVERS_API),\n          data = _ref.data;\n\n    dispatch({\n      type: FETCH_DRIVERS,\n      payload: data\n    });\n  };\n}\nexport function removeDriverAction(driverId) {\n  return {\n    type: REMOVE_DRIVER,\n    payload: driverId\n  };\n}\nexport function filterDriversAction(str) {\n  return {\n    type: FILTER_DRIVERS,\n    payload: str\n  };\n}","map":{"version":3,"sources":["/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/store/drivers/actions.ts"],"names":["FETCH_DRIVERS","REMOVE_DRIVER","FILTER_DRIVERS","DRIVERS_API","Axios","fetchDrivers","dispatch","get","data","type","payload","removeDriverAction","driverId","filterDriversAction","str"],"mappings":"AACA,SAA2BA,aAA3B,EAA8DC,aAA9D,EAAkGC,cAAlG,QAAuH,SAAvH;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,YAAT,GAAkF;AACrF,SAAO,MAAOC,QAAP,IAAiD;AAAA,iBACnC,MAAMF,KAAK,CAACG,GAAN,CAAUJ,WAAV,CAD6B;AAAA,UAC5CK,IAD4C,QAC5CA,IAD4C;;AAEpDF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,aADD;AAELU,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAND;AAOH;AAED,OAAO,SAASG,kBAAT,CAA4BC,QAA5B,EAAkE;AACrE,SAAO;AACHH,IAAAA,IAAI,EAAER,aADH;AAEHS,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH;AAED,OAAO,SAASC,mBAAT,CAA6BC,GAA7B,EAA+D;AAClE,SAAO;AACHL,IAAAA,IAAI,EAAEP,cADH;AAEHQ,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH","sourcesContent":["import {Dispatch} from \"redux\";\nimport {DriverFetchAction, FETCH_DRIVERS, RemoveDriverAction, REMOVE_DRIVER, FilterDriversAction, FILTER_DRIVERS} from \"./types\";\nimport {DRIVERS_API} from \"../../shared/contants/apis\";\nimport Axios from \"axios\";\n\nexport function fetchDrivers(): (dispatch: Dispatch<DriverFetchAction>) => Promise<void> {\n    return async (dispatch: Dispatch<DriverFetchAction>) => {\n        const { data } = await Axios.get(DRIVERS_API);\n        dispatch({\n            type: FETCH_DRIVERS,\n            payload: data\n        })\n    }\n}\n\nexport function removeDriverAction(driverId: string): RemoveDriverAction {\n    return {\n        type: REMOVE_DRIVER,\n        payload: driverId\n    }\n}\n\nexport function filterDriversAction(str: string): FilterDriversAction {\n    return {\n        type: FILTER_DRIVERS,\n        payload: str\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
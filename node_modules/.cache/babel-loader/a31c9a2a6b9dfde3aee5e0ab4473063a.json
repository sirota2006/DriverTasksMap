{"ast":null,"code":"var _jsxFileName = \"/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/map/index.tsx\";\n// @ts-ignore\nimport { ReactBingmaps } from 'react-bingmaps';\nimport React from 'react';\nimport './map.scss';\nimport { connect } from 'react-redux';\nimport { MAP_API } from \"../../shared/contants/apis\";\nimport { parseLocation } from \"../../shared/utils/utils\";\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.mapMarkers = () => {\n      if (this.props.drivers.length) {\n        const locations = [];\n        this.props.drivers.forEach(driver => {\n          const parsedLocation = parseLocation(driver.location);\n          locations.push({\n            location: parsedLocation,\n            options: {\n              title: driver.name,\n              icon: DRIVER_ICON,\n              color: 'red'\n            }\n          });\n        });\n        return locations;\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"map-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ReactBingmaps, {\n      bingmapKey: MAP_API,\n      center: this.props.map.currentLocation,\n      pushPins: this.mapMarkers(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {})(Map);","map":{"version":3,"sources":["/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/map/index.tsx"],"names":["ReactBingmaps","React","connect","MAP_API","parseLocation","Map","Component","mapMarkers","props","drivers","length","locations","forEach","driver","parsedLocation","location","push","options","title","name","icon","DRIVER_ICON","color","componentDidMount","console","log","render","map","currentLocation","mapStateToProps","state"],"mappings":";AAAA;AACA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;;AASA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAA8C;AAAA;AAAA;;AAAA,SAK1CC,UAL0C,GAK7B,MAAM;AACf,UAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAtB,EAA8B;AAC1B,cAAMC,SAAqB,GAAG,EAA9B;AACA,aAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2BC,MAAM,IAAI;AACjC,gBAAMC,cAAc,GAAGV,aAAa,CAACS,MAAM,CAACE,QAAR,CAApC;AACAJ,UAAAA,SAAS,CAACK,IAAV,CACI;AACID,YAAAA,QAAQ,EAAED,cADd;AAEIG,YAAAA,OAAO,EAAE;AACLC,cAAAA,KAAK,EAAEL,MAAM,CAACM,IADT;AAELC,cAAAA,IAAI,EAAEC,WAFD;AAGLC,cAAAA,KAAK,EAAE;AAHF;AAFb,WADJ;AAUH,SAZD;AAaA,eAAOX,SAAP;AACH;AACJ,KAvByC;AAAA;;AAC1CY,EAAAA,iBAAiB,GAAS;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACH;;AAsBDkB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,UAAU,EAAEvB,OADhB;AAEI,MAAA,MAAM,EAAE,KAAKK,KAAL,CAAWmB,GAAX,CAAeC,eAF3B;AAGI,MAAA,QAAQ,EAAE,KAAKrB,UAAL,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH;;AAnCyC;;AAsC9C,MAAMsB,eAAe,GAAIC,KAAD,IAAmC;AACvD,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAe5B,OAAO,CAAC2B,eAAD,EAAkB,EAAlB,CAAP,CAA6BxB,GAA7B,CAAf","sourcesContent":["// @ts-ignore\nimport { ReactBingmaps } from 'react-bingmaps';\n\nimport React from 'react';\nimport './map.scss';\nimport {IDriver} from \"../../shared/interfaces/IDriver\";\nimport {ITask} from \"../../shared/interfaces/ITask\";\nimport {connect} from 'react-redux';\nimport {MAP_API} from \"../../shared/contants/apis\";\nimport {parseLocation} from \"../../shared/utils/utils\";\nimport {MapState} from \"../../store/map/types\";\n\ninterface StateProps {\n    drivers: Array<IDriver>;\n    tasks: Array<ITask>;\n    map: MapState;\n}\n\nclass Map extends React.Component<StateProps> {\n    componentDidMount(): void {\n        console.log(this.props);\n    }\n\n    mapMarkers = () => {\n        if(this.props.drivers.length) {\n            const locations: Array<any> = [];\n            this.props.drivers.forEach(driver => {\n                const parsedLocation = parseLocation(driver.location);\n                locations.push(\n                    {\n                        location :parsedLocation,\n                        options: {\n                            title: driver.name,\n                            icon: DRIVER_ICON,\n                            color: 'red'\n                        }\n                    }\n                )\n            });\n            return locations;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"map-container\">\n                <ReactBingmaps\n                    bingmapKey={MAP_API}\n                    center={this.props.map.currentLocation}\n                    pushPins={this.mapMarkers()}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateProps): StateProps => {\n    return state;\n};\n\nexport default connect(mapStateToProps, {})(Map);\n"]},"metadata":{},"sourceType":"module"}
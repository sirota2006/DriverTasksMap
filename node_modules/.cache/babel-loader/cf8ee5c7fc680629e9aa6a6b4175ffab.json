{"ast":null,"code":"var _jsxFileName = \"/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/tasksList/index.tsx\";\nimport './tasksList.scss';\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Task from './task';\nimport { fetchTasks } from \"../../store/tasks/actions\";\n\nclass TasksList extends React.Component {\n  componentDidMount() {\n    this.props.fetchTasks();\n  }\n\n  renderTasks() {\n    if (this.props.tasks.length) {\n      return this.props.tasks.map(task => {\n        return React.createElement(Task, {\n          key: task._id,\n          task: task,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"No Available Tasks\");\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"tasks-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tasks-list_tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tasks-list_tabs_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tasks-list_tabs_item__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Title\")), React.createElement(\"div\", {\n      className: \"tasks-list_tabs_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tasks-list_tabs_item__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Scheduled for\")), React.createElement(\"div\", {\n      className: \"tasks-list_tabs_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tasks-list_tabs_item__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Assign to\")), React.createElement(\"div\", {\n      className: \"tasks-list_tabs_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tasks-list_tabs_item__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Address\")), React.createElement(\"div\", {\n      className: \"tasks-list_tabs_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tasks-list_tabs_item__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Location\"))), React.createElement(\"div\", {\n      className: \"tasks-list_tasks-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.renderTasks()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n}; // @ts-ignore\n\n\nexport default connect(mapStateToProps, {\n  fetchTasks\n})(TasksList);","map":{"version":3,"sources":["/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/tasksList/index.tsx"],"names":["React","connect","Task","fetchTasks","TasksList","Component","componentDidMount","props","renderTasks","tasks","length","map","task","_id","render","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;;AAQA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAuD;AACnDC,EAAAA,iBAAiB,GAAS;AACtB,SAAKC,KAAL,CAAWJ,UAAX;AACH;;AAEDK,EAAAA,WAAW,GAAG;AACV,QAAG,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAApB,EAA4B;AACxB,aAAO,KAAKH,KAAL,CAAWE,KAAX,CAAiBE,GAAjB,CAAsBC,IAAD,IAAiB;AACzC,eAAO,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAhB;AAAqB,UAAA,IAAI,EAAED,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,CAAP;AAGH;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH;;AAEDE,EAAAA,MAAM,GAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CANJ,EAWI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAXJ,EAgBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAhBJ,EAqBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CArBJ,CADJ,EA4BI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,WAAL,EADL,CA5BJ,CADJ;AAkCH;;AAnDkD;;AAsDvD,MAAMS,eAAe,GAAIC,KAAD,IAAuB;AAAE,SAAOA,KAAP;AAAc,CAA/D,C,CAEA;;;AACA,eAAejB,OAAO,CAACgB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,SAAzC,CAAf","sourcesContent":["import './tasksList.scss'\nimport React from 'react';\nimport {ITask} from '../../shared/interfaces/ITask';\nimport {connect} from \"react-redux\";\nimport Task from './task';\nimport {fetchTasks} from \"../../store/tasks/actions\";\nimport {TasksState} from \"../../store/tasks/types\";\n\ninterface TaskListProps {\n    fetchTasks: typeof fetchTasks;\n    tasks: Array<ITask>;\n}\n\nclass TasksList extends React.Component<TaskListProps> {\n    componentDidMount(): void {\n        this.props.fetchTasks();\n    }\n\n    renderTasks() {\n        if(this.props.tasks.length) {\n            return this.props.tasks.map((task: ITask) => {\n                return <Task key={task._id} task={task}/>\n            })\n        }\n\n        return <h1>No Available Tasks</h1>\n    }\n\n    render () {\n        console.log(this.props);\n        return (\n            <div className=\"tasks-list\">\n                <div className=\"tasks-list_tabs\">\n                    <div className=\"tasks-list_tabs_item\">\n                        <span className=\"tasks-list_tabs_item__name\">\n                            Title\n                        </span>\n                    </div>\n                    <div className=\"tasks-list_tabs_item\">\n                        <span className=\"tasks-list_tabs_item__name\">\n                            Scheduled for\n                        </span>\n                    </div>\n                    <div className=\"tasks-list_tabs_item\">\n                        <span className=\"tasks-list_tabs_item__name\">\n                            Assign to\n                        </span>\n                    </div>\n                    <div className=\"tasks-list_tabs_item\">\n                        <span className=\"tasks-list_tabs_item__name\">\n                            Address\n                        </span>\n                    </div>\n                    <div className=\"tasks-list_tabs_item\">\n                        <span className=\"tasks-list_tabs_item__name\">\n                            Location\n                        </span>\n                    </div>\n                </div>\n                <div className=\"tasks-list_tasks-wrapper\">\n                    {this.renderTasks()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: TasksState) => { return state };\n\n// @ts-ignore\nexport default connect(mapStateToProps, { fetchTasks })(TasksList);\n"]},"metadata":{},"sourceType":"module"}
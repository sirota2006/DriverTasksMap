{"ast":null,"code":"export const fetchDrivers = () => {\n  // Invoke API\n  return async dispatch => {\n    return new Promise(resolve => {\n      dispatch(isFetching(true));\n      console.log('Login in progress');\n      setTimeout(() => {\n        dispatch(set('this_is_access_token'));\n        setTimeout(() => {\n          dispatch(isFetching(false));\n          console.log('Login done');\n          resolve();\n        }, 1000);\n      }, 3000);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/store/drivers/actions.ts"],"names":["fetchDrivers","dispatch","Promise","resolve","isFetching","console","log","setTimeout","set"],"mappings":"AAYA,OAAO,MAAMA,YAAY,GAAG,MAAqD;AAC7E;AACA,SAAO,MAAOC,QAAP,IAAqE;AACxE,WAAO,IAAIC,OAAJ,CAAmBC,OAAD,IAAa;AAClCF,MAAAA,QAAQ,CAACG,UAAU,CAAC,IAAD,CAAX,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAC,MAAAA,UAAU,CAAC,MAAM;AACbN,QAAAA,QAAQ,CAACO,GAAG,CAAC,sBAAD,CAAJ,CAAR;AACAD,QAAAA,UAAU,CAAC,MAAM;AACbN,UAAAA,QAAQ,CAACG,UAAU,CAAC,KAAD,CAAX,CAAR;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAH,UAAAA,OAAO;AACV,SAJS,EAIP,IAJO,CAAV;AAKH,OAPS,EAOP,IAPO,CAAV;AAQH,KAXM,CAAP;AAYH,GAbD;AAcH,CAhBM","sourcesContent":["import {FETCH_DRIVERS} from \"./types\";\nimport {DRIVERS_API} from \"../../shared/contants/apis\";\nimport {IDriver} from \"../../shared/interfaces/IDriver\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AnyAction} from \"redux\";\n\n\ninterface DriversAction {\n    type: typeof FETCH_DRIVERS;\n    payload: Array<IDriver>;\n}\n\nexport const fetchDrivers = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n    // Invoke API\n    return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n        return new Promise<void>((resolve) => {\n            dispatch(isFetching(true))\n            console.log('Login in progress')\n            setTimeout(() => {\n                dispatch(set('this_is_access_token'))\n                setTimeout(() => {\n                    dispatch(isFetching(false))\n                    console.log('Login done')\n                    resolve()\n                }, 1000)\n            }, 3000)\n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}
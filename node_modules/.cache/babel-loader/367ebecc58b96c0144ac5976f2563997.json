{"ast":null,"code":"import { ASSIGN_DRIVER, FETCH_TASKS } from \"./types\";\nconst initialState = {\n  tasks: []\n};\nexport const tasksReducer = (state = initialState.tasks, action) => {\n  switch (action.type) {\n    case FETCH_TASKS:\n      return action.payload;\n\n    case ASSIGN_DRIVER:\n      let tempArr = [];\n      state.map(task => {\n        if (task._id === action.payload.taskId) {\n          task.assignTo = action.payload.driver;\n        }\n      });\n      console.log(state);\n      return state;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/store/tasks/reducer.ts"],"names":["ASSIGN_DRIVER","FETCH_TASKS","initialState","tasks","tasksReducer","state","action","type","payload","tempArr","map","task","_id","taskId","assignTo","driver","console","log"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,WAAvB,QAAqD,SAArD;AAIA,MAAMC,YAAwB,GAAG;AAC7BC,EAAAA,KAAK,EAAE;AADsB,CAAjC;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAY,CAACC,KAAtB,EAA6BG,MAA7B,KAA+D;AACvF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAL;AACI,aAAOK,MAAM,CAACE,OAAd;;AACJ,SAAKR,aAAL;AACQ,UAAIS,OAAqB,GAAG,EAA5B;AACAJ,MAAAA,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACd,YAAIA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAAP,CAAeK,MAAhC,EAAwC;AACpCF,UAAAA,IAAI,CAACG,QAAL,GAAgBR,MAAM,CAACE,OAAP,CAAeO,MAA/B;AACH;AACJ,OAJD;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACJ,aAAOA,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAfR;AAiBH,CAlBM","sourcesContent":["import {ASSIGN_DRIVER, FETCH_TASKS, TasksState} from \"./types\";\nimport { TasksActionTypes } from \"./types\";\nimport {ITask} from \"../../shared/interfaces/ITask\";\n\nconst initialState: TasksState = {\n    tasks: []\n};\n\nexport const tasksReducer = (state = initialState.tasks, action: TasksActionTypes): any => {\n    switch (action.type) {\n        case FETCH_TASKS:\n            return action.payload;\n        case ASSIGN_DRIVER:\n                let tempArr: Array<ITask> = [];\n                state.map(task => {\n                    if (task._id === action.payload.taskId) {\n                        task.assignTo = action.payload.driver;\n                    }\n                });\n\n                console.log(state);\n            return state;\n\n        default:\n            return state;\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/map/index.tsx\";\n// @ts-ignore\nimport { ReactBingmaps } from 'react-bingmaps';\nimport React from 'react';\nimport './map.scss';\nimport { connect } from 'react-redux';\nimport { MAP_API } from \"../../shared/contants/apis\";\nimport { parseLocation } from \"../../shared/utils/utils\";\nconst DRIVER_ICON = \"https://img.icons8.com/metro/16/000000/delivery.png\";\nconst TASK_ICON = \"https://img.icons8.com/metro/16/000000/realtime-protection.png\";\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.mapMarkers = () => {\n      if (this.props.drivers.length && this.props.tasks.length) {\n        const marks = this.mapTasksLocations().concat(this.mapDriversLocations());\n        return marks;\n      }\n    };\n\n    this.mapDriversLocations = () => {\n      const driversMarks = [];\n      this.props.drivers.forEach(driver => {\n        driversMarks.push({\n          location: parseLocation(driver.location),\n          option: {\n            title: 'Driver: ' + driver.name,\n            icon: DRIVER_ICON\n          }\n        });\n      });\n      return driversMarks;\n    };\n\n    this.mapTasksLocations = () => {\n      const tasksMarks = [];\n      this.props.tasks.forEach(task => {\n        tasksMarks.push({\n          location: parseLocation(task.location),\n          option: {\n            title: 'Task: ' + task.title,\n            icon: TASK_ICON\n          }\n        });\n      });\n      console.log(tasksMarks);\n      return tasksMarks;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"map-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ReactBingmaps, {\n      bingmapKey: MAP_API,\n      center: this.props.map.currentLocation,\n      pushPins: this.mapMarkers(),\n      zoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {})(Map);","map":{"version":3,"sources":["/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/map/index.tsx"],"names":["ReactBingmaps","React","connect","MAP_API","parseLocation","DRIVER_ICON","TASK_ICON","Map","Component","mapMarkers","props","drivers","length","tasks","marks","mapTasksLocations","concat","mapDriversLocations","driversMarks","forEach","driver","push","location","option","title","name","icon","tasksMarks","task","console","log","render","map","currentLocation","mapStateToProps","state"],"mappings":";AAAA;AACA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AAUA,MAAMC,WAAW,GAAG,qDAApB;AACA,MAAMC,SAAS,GAAG,gEAAlB;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAA8C;AAAA;AAAA;;AAAA,SAE1CC,UAF0C,GAE7B,MAAM;AACf,UAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,IAA6B,KAAKF,KAAL,CAAWG,KAAX,CAAiBD,MAAjD,EAAyD;AACrD,cAAME,KAAkB,GAAG,KAAKC,iBAAL,GAAyBC,MAAzB,CAAgC,KAAKC,mBAAL,EAAhC,CAA3B;AACA,eAAOH,KAAP;AACH;AACJ,KAPyC;;AAAA,SAS1CG,mBAT0C,GASpB,MAAmB;AACrC,YAAMC,YAAyB,GAAG,EAAlC;AACA,WAAKR,KAAL,CAAWC,OAAX,CAAmBQ,OAAnB,CAA2BC,MAAM,IAAI;AACjCF,QAAAA,YAAY,CAACG,IAAb,CAAkB;AACdC,UAAAA,QAAQ,EAAElB,aAAa,CAACgB,MAAM,CAACE,QAAR,CADT;AAEbC,UAAAA,MAAM,EAAE;AACLC,YAAAA,KAAK,EAAE,aAAaJ,MAAM,CAACK,IADtB;AAELC,YAAAA,IAAI,EAAErB;AAFD;AAFK,SAAlB;AAOH,OARD;AAUA,aAAOa,YAAP;AACH,KAtByC;;AAAA,SAwB1CH,iBAxB0C,GAwBtB,MAAmB;AACnC,YAAMY,UAAuB,GAAG,EAAhC;AACA,WAAKjB,KAAL,CAAWG,KAAX,CAAiBM,OAAjB,CAAyBS,IAAI,IAAI;AAC7BD,QAAAA,UAAU,CAACN,IAAX,CAAgB;AACZC,UAAAA,QAAQ,EAAElB,aAAa,CAACwB,IAAI,CAACN,QAAN,CADX;AAEXC,UAAAA,MAAM,EAAE;AACLC,YAAAA,KAAK,EAAE,WAAWI,IAAI,CAACJ,KADlB;AAELE,YAAAA,IAAI,EAAEpB;AAFD;AAFG,SAAhB;AAOH,OARD;AAUAuB,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,aAAOA,UAAP;AACH,KAtCyC;AAAA;;AAwC1CI,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,UAAU,EAAE5B,OADhB;AAEI,MAAA,MAAM,EAAE,KAAKO,KAAL,CAAWsB,GAAX,CAAeC,eAF3B;AAGI,MAAA,QAAQ,EAAE,KAAKxB,UAAL,EAHd;AAII,MAAA,IAAI,EAAI,EAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AAnDyC;;AAsD9C,MAAMyB,eAAe,GAAIC,KAAD,IAAmC;AACvD,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAejC,OAAO,CAACgC,eAAD,EAAkB,EAAlB,CAAP,CAA6B3B,GAA7B,CAAf","sourcesContent":["// @ts-ignore\nimport { ReactBingmaps } from 'react-bingmaps';\n\nimport React from 'react';\nimport './map.scss';\nimport {IDriver} from \"../../shared/interfaces/IDriver\";\nimport {ITask} from \"../../shared/interfaces/ITask\";\nimport {connect} from 'react-redux';\nimport {MAP_API} from \"../../shared/contants/apis\";\nimport {parseLocation} from \"../../shared/utils/utils\";\nimport {MapState} from \"../../store/map/types\";\nimport {Mark} from \"./types\";\n\ninterface StateProps {\n    drivers: Array<IDriver>;\n    tasks: Array<ITask>;\n    map: MapState;\n}\n\nconst DRIVER_ICON = \"https://img.icons8.com/metro/16/000000/delivery.png\";\nconst TASK_ICON = \"https://img.icons8.com/metro/16/000000/realtime-protection.png\";\n\nclass Map extends React.Component<StateProps> {\n\n    mapMarkers = () => {\n        if(this.props.drivers.length && this.props.tasks.length) {\n            const marks: Array<Mark> = this.mapTasksLocations().concat(this.mapDriversLocations());\n            return marks;\n        }\n    };\n\n    mapDriversLocations = (): Array<Mark> => {\n        const driversMarks: Array<Mark> = [];\n        this.props.drivers.forEach(driver => {\n            driversMarks.push({\n                location: parseLocation(driver.location)\n                ,option: {\n                    title: 'Driver: ' + driver.name,\n                    icon: DRIVER_ICON\n                }\n            })\n        });\n\n        return driversMarks;\n    };\n\n    mapTasksLocations = (): Array<Mark> => {\n        const tasksMarks: Array<Mark> = [];\n        this.props.tasks.forEach(task => {\n            tasksMarks.push({\n                location: parseLocation(task.location)\n                ,option: {\n                    title: 'Task: ' + task.title,\n                    icon: TASK_ICON\n                }\n            })\n        });\n\n        console.log(tasksMarks);\n        return tasksMarks;\n    };\n\n    render() {\n        return (\n            <div className=\"map-container\">\n                <ReactBingmaps\n                    bingmapKey={MAP_API}\n                    center={this.props.map.currentLocation}\n                    pushPins={this.mapMarkers()}\n                    zoom = {13}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateProps): StateProps => {\n    return state;\n};\n\nexport default connect(mapStateToProps, {})(Map);\n"]},"metadata":{},"sourceType":"module"}
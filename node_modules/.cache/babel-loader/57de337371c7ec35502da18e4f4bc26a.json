{"ast":null,"code":"var _jsxFileName = \"/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/DriversList/index.tsx\";\nimport { connect } from 'react-redux';\nimport { fetchDrivers, removeDriverAction } from \"../../store/drivers/actions\";\nimport './driversList.scss';\nimport * as React from \"react\";\nimport Driver from \"./driver\";\nimport { setMapLocationAction } from \"../../store/map/actions\";\nimport { parseLocation, sortBy } from \"../../shared/utils/utils\";\n\nclass DriversList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLocateDriver = driverLocation => {\n      this.props.setMapLocationAction(parseLocation(driverLocation));\n    };\n\n    this.handleRemoveDriver = driverId => {\n      this.props.removeDriverAction(driverId);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchDrivers();\n    this.setState({\n      sortBy: 'name',\n      sortAscending: true\n    });\n  }\n\n  toggleSortAscending() {\n    this.setState({\n      sortAscending: !this.state.sortAscending\n    });\n  }\n\n  renderDrivers() {\n    if (this.props.drivers.length) {\n      return sortBy(this.props.drivers, this.state.sortBy, this.state.sortAscending).map(driver => {\n        return React.createElement(Driver, {\n          key: driver._id,\n          onRemoveDriver: this.handleRemoveDriver,\n          onLocateDriver: this.handleLocateDriver,\n          driver: driver,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"No Available Drivers!\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"drivers-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"filter name\",\n      type: \"text\",\n      className: \"drivers-list__filter-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"drivers-list_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"drivers-list_wrapper_sort-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"drivers-list_wrapper_sort-wrapper__heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Sort By:\"), React.createElement(\"div\", {\n      onClick: () => this.toggleSortAscending(),\n      className: \"drivers-list_wrapper_sort-wrapper_sort-by\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"arrow arrow--down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"drivers-list_wrapper_sort-wrapper_sort-by__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state ? this.state.sortBy : 'name'))), this.renderDrivers()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  removeDriverAction,\n  setMapLocationAction,\n  fetchDrivers\n})(DriversList);","map":{"version":3,"sources":["/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/DriversList/index.tsx"],"names":["connect","fetchDrivers","removeDriverAction","React","Driver","setMapLocationAction","parseLocation","sortBy","DriversList","Component","handleLocateDriver","driverLocation","props","handleRemoveDriver","driverId","componentDidMount","setState","sortAscending","toggleSortAscending","state","renderDrivers","drivers","length","map","driver","_id","render","mapStateToProps"],"mappings":"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","sourcesContent":["import {connect} from 'react-redux';\nimport {fetchDrivers, removeDriverAction} from \"../../store/drivers/actions\";\nimport './driversList.scss';\nimport * as React from \"react\";\nimport {IDriver} from \"../../shared/interfaces/IDriver\";\nimport Driver from \"./driver\";\nimport {ILocation} from \"../../shared/interfaces/ILocation\";\nimport {setMapLocationAction} from \"../../store/map/actions\";\nimport {parseLocation, sortBy} from \"../../shared/utils/utils\";\n\ninterface DriverListProps {\n    fetchDrivers: typeof fetchDrivers;\n    setMapLocationAction: typeof setMapLocationAction;\n    removeDriverAction: typeof removeDriverAction;\n    drivers: Array<IDriver>;\n}\n\ninterface DriverListState {\n    sortBy: string,\n    sortAscending: boolean\n}\n\n\nclass DriversList extends React.Component<DriverListProps,DriverListState> {\n    componentDidMount(): void {\n        this.props.fetchDrivers();\n\n        this.setState({\n            sortBy: 'name',\n            sortAscending: true,\n        })\n    }\n\n    handleLocateDriver = (driverLocation: ILocation) => {\n        this.props.setMapLocationAction(parseLocation(driverLocation));\n    };\n\n    handleRemoveDriver = (driverId: string) => {\n        this.props.removeDriverAction(driverId);\n    };\n\n    toggleSortAscending() {\n        this.setState({\n            sortAscending: !this.state.sortAscending\n        })\n    }\n\n    renderDrivers() {\n        if (this.props.drivers.length) {\n            return sortBy(this.props.drivers, this.state.sortBy, this.state.sortAscending).map(driver => {\n                return <Driver key={driver._id}\n                       onRemoveDriver={this.handleRemoveDriver}\n                       onLocateDriver={this.handleLocateDriver}\n                       driver={driver}/>\n            })\n        }\n\n        return <h1>No Available Drivers!</h1>;\n    }\n\n    render() {\n        return (\n            <div className='drivers-list'>\n                <input placeholder='filter name' type=\"text\" className=\"drivers-list__filter-input\"/>\n                <div className=\"drivers-list_wrapper\">\n                    <div className=\"drivers-list_wrapper_sort-wrapper\">\n                        <h2 className=\"drivers-list_wrapper_sort-wrapper__heading\">Sort By:</h2>\n\n                        <div onClick={() => this.toggleSortAscending()} className=\"drivers-list_wrapper_sort-wrapper_sort-by\">\n                            <div className=\"arrow arrow--down\"></div>\n                            <span className=\"drivers-list_wrapper_sort-wrapper_sort-by__name\">\n                                {this.state ? this.state.sortBy : 'name'}\n                            </span>\n                        </div>\n                    </div>\n\n                    {this.renderDrivers()}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: DriverListProps)  => { return state };\n\nexport default connect(mapStateToProps, { removeDriverAction, setMapLocationAction, fetchDrivers })(DriversList);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/map/index.tsx\";\n// @ts-ignore\nimport { ReactBingmaps } from 'react-bingmaps';\nimport React from 'react';\nimport './map.scss';\nimport { connect } from 'react-redux';\nimport { MAP_API } from \"../../shared/contants/apis\";\nimport { parseLocation } from \"../../shared/utils/utils\";\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.mapMarkers = () => {\n      if (this.props.drivers.length && this.props.tasks.length) {\n        console.log(this.props);\n        const marks = this.mapTasksLocations().concat(this.mapDriversLocations());\n        return marks;\n      }\n    };\n\n    this.mapDriversLocations = () => {\n      const driversMarks = [];\n      this.props.drivers.forEach(driver => {\n        driversMarks.push({\n          location: parseLocation(driver.location),\n          options: {\n            color: 'black'\n          }\n        });\n      });\n      console.log(driversMarks);\n      return driversMarks;\n    };\n\n    this.mapTasksLocations = () => {\n      const tasksMarks = [];\n      this.props.tasks.forEach(task => {\n        tasksMarks.push({\n          location: parseLocation(task.location),\n          options: {\n            color: 'white'\n          }\n        });\n      });\n      console.log(tasksMarks);\n      return tasksMarks;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"map-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ReactBingmaps, {\n      bingmapKey: MAP_API,\n      center: this.props.map.currentLocation,\n      pushPins: this.mapMarkers(),\n      zoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {})(Map);","map":{"version":3,"sources":["/Users/artiom2006/Desktop/Web/React/bringg/bringg-map/src/components/map/index.tsx"],"names":["ReactBingmaps","React","connect","MAP_API","parseLocation","Map","Component","mapMarkers","props","drivers","length","tasks","console","log","marks","mapTasksLocations","concat","mapDriversLocations","driversMarks","forEach","driver","push","location","options","color","tasksMarks","task","render","map","currentLocation","mapStateToProps","state"],"mappings":";AAAA;AACA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,4BAAtB;AACA,SAAQC,aAAR,QAA4B,0BAA5B;;AAUA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAA8C;AAAA;AAAA;;AAAA,SAE1CC,UAF0C,GAE7B,MAAM;AACf,UAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,IAA6B,KAAKF,KAAL,CAAWG,KAAX,CAAiBD,MAAjD,EAAyD;AACrDE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,cAAMM,KAAkB,GAAG,KAAKC,iBAAL,GAAyBC,MAAzB,CAAgC,KAAKC,mBAAL,EAAhC,CAA3B;AACA,eAAOH,KAAP;AACH;AACJ,KARyC;;AAAA,SAU1CG,mBAV0C,GAUpB,MAAmB;AACrC,YAAMC,YAAyB,GAAG,EAAlC;AACA,WAAKV,KAAL,CAAWC,OAAX,CAAmBU,OAAnB,CAA2BC,MAAM,IAAI;AACjCF,QAAAA,YAAY,CAACG,IAAb,CAAkB;AACdC,UAAAA,QAAQ,EAAElB,aAAa,CAACgB,MAAM,CAACE,QAAR,CADT;AAEbC,UAAAA,OAAO,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAFI,SAAlB;AAIH,OALD;AAOAZ,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACA,aAAOA,YAAP;AACH,KArByC;;AAAA,SAuB1CH,iBAvB0C,GAuBtB,MAAmB;AACnC,YAAMU,UAAuB,GAAG,EAAhC;AACA,WAAKjB,KAAL,CAAWG,KAAX,CAAiBQ,OAAjB,CAAyBO,IAAI,IAAI;AAC7BD,QAAAA,UAAU,CAACJ,IAAX,CAAgB;AACZC,UAAAA,QAAQ,EAAElB,aAAa,CAACsB,IAAI,CAACJ,QAAN,CADX;AAEXC,UAAAA,OAAO,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAFE,SAAhB;AAIH,OALD;AAOAZ,MAAAA,OAAO,CAACC,GAAR,CAAYY,UAAZ;AACA,aAAOA,UAAP;AACH,KAlCyC;AAAA;;AAoC1CE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,UAAU,EAAExB,OADhB;AAEI,MAAA,MAAM,EAAE,KAAKK,KAAL,CAAWoB,GAAX,CAAeC,eAF3B;AAGI,MAAA,QAAQ,EAAE,KAAKtB,UAAL,EAHd;AAII,MAAA,IAAI,EAAI,EAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AA/CyC;;AAkD9C,MAAMuB,eAAe,GAAIC,KAAD,IAAmC;AACvD,SAAOA,KAAP;AACH,CAFD;;AAIA,eAAe7B,OAAO,CAAC4B,eAAD,EAAkB,EAAlB,CAAP,CAA6BzB,GAA7B,CAAf","sourcesContent":["// @ts-ignore\nimport { ReactBingmaps } from 'react-bingmaps';\n\nimport React from 'react';\nimport './map.scss';\nimport {IDriver} from \"../../shared/interfaces/IDriver\";\nimport {ITask} from \"../../shared/interfaces/ITask\";\nimport {connect} from 'react-redux';\nimport {MAP_API} from \"../../shared/contants/apis\";\nimport {parseLocation} from \"../../shared/utils/utils\";\nimport {MapState} from \"../../store/map/types\";\nimport {Mark} from \"./types\";\n\ninterface StateProps {\n    drivers: Array<IDriver>;\n    tasks: Array<ITask>;\n    map: MapState;\n}\n\nclass Map extends React.Component<StateProps> {\n\n    mapMarkers = () => {\n        if(this.props.drivers.length && this.props.tasks.length) {\n            console.log(this.props);\n            const marks: Array<Mark> = this.mapTasksLocations().concat(this.mapDriversLocations());\n            return marks;\n        }\n    };\n\n    mapDriversLocations = (): Array<Mark> => {\n        const driversMarks: Array<Mark> = [];\n        this.props.drivers.forEach(driver => {\n            driversMarks.push({\n                location: parseLocation(driver.location)\n                ,options: {color: 'black'}\n            })\n        });\n\n        console.log(driversMarks);\n        return driversMarks;\n    };\n\n    mapTasksLocations = (): Array<Mark> => {\n        const tasksMarks: Array<Mark> = [];\n        this.props.tasks.forEach(task => {\n            tasksMarks.push({\n                location: parseLocation(task.location)\n                ,options: {color: 'white'}\n            })\n        });\n\n        console.log(tasksMarks);\n        return tasksMarks;\n    };\n\n    render() {\n        return (\n            <div className=\"map-container\">\n                <ReactBingmaps\n                    bingmapKey={MAP_API}\n                    center={this.props.map.currentLocation}\n                    pushPins={this.mapMarkers()}\n                    zoom = {13}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: StateProps): StateProps => {\n    return state;\n};\n\nexport default connect(mapStateToProps, {})(Map);\n"]},"metadata":{},"sourceType":"module"}